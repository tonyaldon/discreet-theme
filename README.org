* About

This repository provides two versions close to my theme
[[https://github.com/tonyaldon/emacs.d/blob/master/themes/discreet-theme.el][discreet-theme.el]] I'm using within emacs to highlight code:

1) [[./discreet-theme.css]] to be used with [[http://highlightjs.org][Highlight.js]],
2) [[./discreet-theme-pygments.css]] to be used with [[https://pygments.org/][Pygments]].

[[./discreet-theme.png]]

* Motivation

There already exists cool dark themes out there for highlightjs (see
[[https://highlightjs.org/static/demo/][highlightjs demo]]), but for concistency I wanted the one I'm using
everyday within emacs.

* Install
** with Highlight.js

1. Copy the file [[./discreet-theme.css]] in your project.

2. Include the file ~discreet-theme.css~ in your html file and turn on
   highlightjs by adding these snippet the ~<head>~ tag:

   #+BEGIN_SRC html
   <link rel="stylesheet" href="discreet-theme.css">
   <script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.1.1/highlight.min.js"></script>
   <script>hljs.initHighlightingOnLoad();</script>
   #+END_SRC

** with Pygments

If the code snippets you want to highlight has been generated with
Pygments either from ~python~ or with the command lines ~pygmentize~,
put the file [[./discreet-theme-pygments.css]] in your project and include
it in your html file by adding the following line the ~<head>~ tag:

#+BEGIN_SRC html
<link rel="stylesheet" href="discreet-theme-pygments.css">
#+END_SRC

* Dev

The directory [[./dev/fixtures/]] contains some chunks of code in
different languages (~bash~, ~html~, ~css~, ~javascript~, ~python~, ~clojure~)
that you can use to modify the ~css~ of the theme.

I use [[https://browsersync.io/][browser-sync]] to serve files and reload the browser when files
are modified.

** highlightjs

By running the following command, you start a server at
[[http://localhost:3000]] that serve the file [[./dev/highlightjs/index.html]]
and reload the browser when file in the directory [[./dev/highlightjs/]]
are modified:

#+BEGIN_SRC bash
browser-sync dev/highlightjs/ -s -w --files "./dev/highlightjs/*"
#+END_SRC

You can use it, to develop the theme for highlightjs modifying the
file [[./dev/highlightjs/discreet-theme.css]].
** Pygments

By running the following command, you start a server at
[[http://localhost:3000]] that serve the file [[./dev/pygments/index.html]]
and reload the browser when file in the directory [[./dev/pygments/]]
are modified:

#+BEGIN_SRC bash
browser-sync dev/pygments/ -s -w --files "./dev/pygments/*"
#+END_SRC

# FIXME
# You can use it, to develop the theme for highlightjs modifying the
# file [[./dev/highlightjs/discreet-theme.css]].

*** generate index.html using ~pygmentize~ for generating the code snippets

Install ~pygments~ Python module and its command line ~pygmentize~.

#+BEGIN_SRC bash
python3 --version
#+END_SRC

#+RESULTS:
: Python 3.9.2

#+BEGIN_SRC bash
python3 -m venv .venv
source .venv/bin/activate
pip install Pygments
which pygmentize
#+END_SRC

gives you:

: /home/tony/work/projects/discreet-theme/.venv/bin/pygmentize

The file [[./dev/pygments/index.html]] has been generated using ~pygmentize~
command line evaluating the following ~elisp~ code:

#+BEGIN_SRC emacs-lisp
(setq pygm-cmd (concat default-directory ".venv/bin/pygmentize"))

(defun pygm (code lang)
  "Return an html string with CODE formatted with `pygmentize'
following LANG language."
  (let* ((id (sha1 (mapconcat #'number-to-string (current-time) "")))
         (tmpfile (concat "/tmp/pygmentize-" id))
         (cmd (concat pygm-cmd
                      " -f html"
                      " -l " lang
                      " " tmpfile)))
    (with-temp-file tmpfile (insert code))
    (shell-command-to-string cmd)))

(with-temp-file "dev/pygments/index.html"
  (insert
   (concat "<html><head><meta charset=\"UTF-8\"/>"
           "<style> h1,h2 {color:white;} </style>"
           ;; "<style> body {background:#121212;} h1,h2 {color:white;} </style>"
           "<link rel=\"stylesheet\" href=\"discreet-theme-pygments.css\">"
           "<title>discreet theme</title>"
           "</head>"
           "<body>"))
  (dolist (f (--filter (not (member it '("." "..")))
                       (directory-files "dev/fixtures")))
    (let ((code (with-temp-buffer
                  (insert-file-contents (concat "./dev/fixtures/" f))
                  (buffer-substring-no-properties (point-min) (point-max))))
          (lang (car (s-split "[.]" f))))
      (insert (pygm code lang))))
  (insert "</body>"))
#+END_SRC

*** generate file discreet-theme-pygments.css

We generate [[./discreet-theme-pygments.css]] from the file [[./discreet.py]]
following these 3 steps:

1) we make the style ~discreet~ available to ~pygmentize~ by making the
   following symbolic link:

   #+BEGIN_SRC bash :results none
   ln -s `pwd`/discreet.py ./.venv/lib/python3.9/site-packages/pygments/styles/
   #+END_SRC

2) we generate the css file [[./dev/pygments/discreet-theme-pygments.css]]
   by running the following command:

   #+BEGIN_SRC bash :results none
   pygmentize -S discreet -f html -a .highlight > ./dev/pygments/discreet-theme-pygments.css
   #+END_SRC

3) Now, we can work on the file [[./discreet.py]], rerun the step 2,
   and look the changes at [[http://localhost:3000]] (with the hot
   reloading describe above).  When we are happy with the theme, we
   just have to copy it at the top of this repository:

   #+BEGIN_SRC bash :results none
   cp ./dev/pygments/discreet-theme-pygments.css discreet-theme-pygments.css
   #+END_SRC
